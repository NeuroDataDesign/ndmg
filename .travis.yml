# This travis build simply tests to see if the ndmg pipeline runs to completion.
# Note that this does not mean the ndmg pipeline is *correct* -- just that it ran to completion!
# TODO : run ndmg with `pytest`, rather than travis.
# TODO : travis breaks if you make edits directly from github, because the branch name is wrong.

# dist: xenial
# virtualenv:
#   system_site_packages: true

language: python

python:
  - "3.6"

services:
  - docker

addons:
  apt:
    packages:
      - docker-ce

env:
  global:
    - secure: "FG40Jg9hHyRi5T0Hw9Zr+fQsdMEZLUpEVOr0g0JPppA7Nvi2wEhGUdVPgr+4ni8OuXyrK0AdpCDNnMopLdjwG1pslSUtQbPOrPSatvrr9gpMJ0zzekyDYzQuzPsbSH0mxETTlFqnmn5Lxu90HOVu1ashm+icurz2zyFXP/11nsiIMQUTWX64dkppYmPDgIBmPSS+TWRI3ccP2S2Zt349xHULFYdz1SfQCmbmUQm5Oms7Ixyby7Se4mNiCTpNAkB7TXChJ3VB9QeT9IGHlPWk8FWZa36WuwyRkBrwCfwhKBOrdKHQqZ2KaJKHpKt2Mwr4IvUCuGzbi9Bfjn1uDxbPH0wiWMyRxM7HhZFgsCdyvChITkMFGhJtGmxGD8MMkliqk8DVK9332+zzM1vjm7MIxc1QpM8IdZSxL5fXSRP8+CnK+TsWf41vG8ueu16GMXqr4sCP/ReK1ZDZfprW7NUNKoQ5KCEN8ToNVOHAAaVVPr4f0B2e6XrWdzvExVEtSMOtRBJ3zZ0XkU4E++FIBMB80E7tQGyH8vds3YjLlDRh9rgw34jKOGN6SVwHsuI3BTujo5my0BF1YvcdSqP49NpJRWMo4ehYRC9/8tM2De+AzIxHaYk9NeuEStGKa0tGn/0Os6YUlUKC8XuxxQNLb1yo1ONNwWaShMsHkdfBFkpnU/o="
    - secure: "GvzALZB0ZfKfe5sDWMF1R38Ov+SCRGG0Xj5Bm5F5p0pqfGCgX0k7iwmzOc+hOoM1XKqQHB/AOUsH53UABJkmlKLAsA6GZbtQprWD9h+kdYhTrMZ9ym4QywdIv0drF1rY7zCx6rAth0Lp9LaUu0P5KhsZNWqW/+ftmT25PvdaMuseIa/fWTWwDEiw5ZJym53we7fRrNgYU+tnlmEdSi0Ix8PmqAWDjxTlUxdg4muij0Tp4SZ4YwmHMlMDgbb8xYxEVfw8tvCYIRqtLbAq2G2s4sF68uzE0VWeI/e0+J0Xu0V5cHMM1x2Nq3+D8vNI97/ptCLo+EYtKnZGo+oxeu4EEB3Gwl8IaJ2JM/WDaq7H87/g1LNhWO5omTpNlRKdRE9p6VnMAbrUip24fCH2kui+FE5+acy7QHepBLYCLohFlK/sGOBszNzudio7AabJlP65tKSYOmAFts3yRZ20kv+tH/3uosL3u/NZGcOeKXKeFCKMRdyAJLdWjhfddLh1iv3vj+VYkDp9mUC13OH29EUIg8VozV5Yyyo3DOIvfX/vMhzWojJlhe6eXPVCI39V8KX01Qs06X83CXAYpaJhbWidyixJHwLoS7qH07o675bRR8Hq8sIT//5o6ho3BzJp1h8hqc3HjIxcKjQDIKvBGqTStoAZH+R8AHJ3l0RJf4eFKwU="
  matrix:
    - SP=native MOD=det
    - SP=native_dsn MOD=det
    - SP=native MOD=prob

before_install:
  # make local input and output directories to attach to container
  - cd ..
  - mkdir -m 777 input output

  # useful log checks
  - readlink -f input
  - ls
  - pwd
  - uname -a
  - df -h
  - docker version

  # grab ndmg's travis docker image, run it with local branch attached as a volume
  - docker pull neurodata/ndmg_travis:latest
  - docker images
  - cd ndmg
  - docker run -t -d --name travis -e AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY -v $(pwd):/ndmg -v $(readlink -f ../output):/output --entrypoint /bin/bash neurodata/ndmg_travis:latest
  - docker ps

install:
  # useful log checks for packages whose versions have given us trouble
  - docker exec -w /ndmg travis pip show dipy networkx

  # get travis branch installed
  - docker exec -w /ndmg travis pip install pytest
  - docker exec -w /ndmg travis pip install .

script:
  # Run ndmg in docker, run pytest in docker.
  # top command is to prevent travis from breaking at eddy_correct
  - while sleep 9m; do echo "=====[ $SECONDS seconds still running ]====="; done &
  - docker exec -w /ndmg travis ndmg --sp $SP --mod $MOD --participant_label 0025864 --session_label 1 --parcellation desikan --seeds 1 /input /output
  - kill %1
  - docker exec -w /ndmg travis pytest -v --disable-warnings
  # generate an identifier for this travis branch run using date_SP_MOD_commit_ID
  - rand=$(date +'%m-%d-%Y'-$SP-$MOD-${TRAVIS_COMMIT:0:7})
  # get name of heatmap and connectome files
  - heat=$(docker exec travis ls /output/sub-0025864/ses-1/qa/graphs_plotting)
  - csv=$(docker exec travis ls /output/sub-0025864/ses-1/dwi/roi-connectomes/desikan_space-MNI152NLin6_res-2x2x2)
  # run a command inside of docker to push heatmap and connectome to the ndmg-data s3 bucket
  - docker exec travis aws s3 sync /output/sub-0025864/ses-1/qa/graphs_plotting s3://ndmg-data/Travis-Output/$TRAVIS_BRANCH/$rand
  - docker exec travis aws s3 sync /output/sub-0025864/ses-1/dwi/roi-connectomes/desikan_space-MNI152NLin6_res-2x2x2 s3://ndmg-data/Travis-Output/$TRAVIS_BRANCH/$rand
  # print the url location for the two files on the s3 bucket
  - echo -en "\n\n\n\n\n\nHEATMAP_LOCATION = s3.console.aws.amazon.com/s3/object/ndmg-data/Travis-Output/$TRAVIS_BRANCH/$rand/$heat?region=us-east-1&tab=overview\n\nCSV_LOCATION = s3.console.aws.amazon.com/s3/object/ndmg-data/Travis-Output/$TRAVIS_BRANCH/$rand/$csv?region=us-east-1&tab=overview\n\n\n\n\n\n"